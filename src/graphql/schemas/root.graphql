input GetInputs {
    page: Int!
    limit: Int!
}

type SuccessResponse {
    success: Boolean!
    message: String!
    user: User
    token: String
}

type Query {
#    user query
    me: User!

    user(input: GetInputs): UsersResponse
    postList(userId: Int, input: GetInputs): PostListResponse
    post(postId: Int!): PostQuery
}

type Mutation {
    createUser(input: CreateUserInput): CreateUserResponse!
    signIn(input: SignInInput): AuthResponse!

#    otp authentication
    sendOtp(input: SendOtpInput!): SuccessResponse!
    verifyOtp(input: VerifyOtpInput!): SuccessResponse!

#    user mutations
    me: UserMutation

    user(id: Int!): UserMutation
    post(id: Int!): PostMutation

#    * create post
    createPost(input: CreatePostInput): Post!

#    test mutation
    testMutation(email: String!, otp: String!, purpose: OtpPurpose!, name: String): String!
}
